# Set path for the baseline files generated by Registry Baseline.ps1
$path = "C:\Users\NCCPC26\Downloads\Windows\Exercise - Malicious Registry"

# Set output file location and filename, and create the file.  NOTE:
# By default, this script will create the output file in the same 
# directory as the baseline files.
$outfile = "$path\diff baselines.txt"
New-Item -Path $outfile -ItemType File -Force

# Import baseline files.
$clean = Get-Content -Path "$path\registry baseline - clean.txt"
$infected = Get-Content -Path "$path\registry baseline - infected.txt"

# Compare baselines.  Do not reformat output.  Only consider lines
# which are added to the difference object (the infected baseline).
$diff = Compare-Object  -ReferenceObject $clean -DifferenceObject $infected -PassThru | where SideIndicator -eq "=>"

# Group interesting keys together by function and select keys from
# the output based on regex pattern matching.
### Auto-run locations for the machine and individual users:
$autorun = $diff | Select-String -Pattern '.*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run'
### Recent network connections:
$networks = $diff | Select-String -Pattern '\\SOFTWARE\\Microsoft\\Windows\sNT\\CurrentVersion\\NetworkList\\Profiles\\'
### User accounts:
$users = $diff | Select-String -Pattern '\\SOFTWARE\\Microsoft\\Windows\sNT\\CurrentVersion\\ProfileList'
### Connected USB devices:
$usbdevices = $diff | Select-String -Pattern '\\SYSTEM\\CurrentControlSet\\Enum\\USB\\.*\\.*\\Device Parameters'

# Function Definitions
# Format the results by splitting each line into its comma-separated
# fields and printing each key path, key name, and key data on a 
# separate line, with one line break separating each key group.
function PrettyPrint {
    param([array]$keyGroup)
    if ($keyGroup -eq $NULL) {
        echo "No keys in this category were added to the infected system."
    } else {
        $keys = $keyGroup.Line  # '$keyGroup' is a MatchInfo object
        foreach ($line in $keys) {
            $key = $line.split(",")
            echo "Key path: $($key[0])"
            echo "Key name: $($key[1])"
            echo ("Key data: $($key[2]) `($($key[3])`)")
            echo ""
            }
        }
    }

# Prepare a key group for output.  First, check the group name 
# parameter to find the correct group title to print.  Then, pass the
# parameter out to the PrettyPrint{} function.  Finally, add two new-
# lines to visually separate key groups in the output text.
function Prepare-Output {
    param([array]$groupName)
    if ("$groupName" -eq "$autorun") {
        echo "Auto-run keys found in the infected system:" | Out-File $outfile -Append
    } elseif ("$groupName" -eq "$networks") {
        echo "Networks that the infected system recently connected to:" | Out-File $outfile -Append
    } elseif ("$groupName" -eq "$users") {
        echo "User accounts created on the infected system:" | Out-File $outfile -Append
    } elseif ("$groupName" -eq "$usbdevices") {
        echo "USB devices recently connected to the infected system:" | Out-File $outfile -Append
    } else {
        echo "This parameter is not supported."
        }
    echo "----------------------------------------------------------------" | Out-File $outfile -Append
    echo $(PrettyPrint -keyGroup $groupName) | Out-File $outfile -Append
    echo "","" | Out-File $outfile -Append
    }

#Main Function
#####################################################################
# Send each group of keys to the PrettyPrint{} function and Write the
# results to the output file.
Prepare-Output -groupName $autorun
Prepare-Output -groupName $networks
Prepare-Output -groupName $users
Prepare-Output -groupName $usbdevices

# Automatically open the output file (comment out if not needed)
notepad $outfile
